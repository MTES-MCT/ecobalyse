# Score History Workflow
#
# This workflow is designed to store the new environmental impact scores in the score history database if they are different from the previous
# It triggers on the successful completion of the Node.js CI workflow across any branch.

# Steps include:
# - Checkout the repository to access the latest codebase.
# - Setup the Python environment and install dependencies
# - Wait for X minutes to ensure dependent services like review apps are deployed.
# - Execute a Python script to compute and append the new score to the score history database using details from the pull request and commit.

name: Score History

on:
  workflow_run:
    workflows: [ 'Node.js CI' ]
    types: [completed]

jobs:
  update_score_history:
    runs-on: ubuntu-latest    
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetches all history for all branches and tags
          persist-credentials: true # Allows Git commands to use the built-in token

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install numpy pandas requests python-dotenv GitPython sqlalchemy psycopg2

      - name: Wait 8 minutes
        run: sleep 1 # Waits for 8 minutes for the review app to be deployed on scalingo

      - name: Update Score History
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          LAST_COMMIT_HASH: ${{ github.sha }}
          SCORE_DATABASE_URL: ${{ secrets.SCORE_DATABASE_URL }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

        run: python ./data/common/score_history/compute_score_history.py $PR_NUMBER $GITHUB_HEAD_REF $LAST_COMMIT_HASH
