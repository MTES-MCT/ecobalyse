name: Create tag and release

env:
  TRANSCRYPT_KEY: ${{ secrets.TRANSCRYPT_KEY }}
  ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}

on:
  workflow_dispatch:
  pull_request:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  create_tag_and_release:
    # The tag and the release should be created only when the automated PR created by `create_pr_for_changelog` is merged
    if: |
      ( github.event_name == 'workflow_dispatch' ||
        ( github.event.pull_request.merged == true  &&
          startsWith(github.event.pull_request.title, 'chore(release)') &&
          contains(github.event.pull_request.labels.*.name, 'automated') &&
          contains(github.event.pull_request.labels.*.name, 'pending-release')
        )
      )
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Transcrypt
        uses: ./.github/actions/transcrypt-cli

      - name: Get latest version
        uses: orhun/git-cliff-action@v4
        id: git_cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header --exclude-path "data/" --bump --unreleased

      - name: Set up Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create and push tag
        # If something went wrong when getting the latest version from `git-cliff`
        # don't create a messy tag
        if: steps.git_cliff.outputs.version != 'null'
        id: tag_creation
        run: |
          git tag -a "${{ steps.git_cliff.outputs.version }}" -m "Release ${{ steps.git_cliff.outputs.version }}"
          git push origin "${{ steps.git_cliff.outputs.version }}"
          echo "tag_created=true" >> "$GITHUB_OUTPUT"
          echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        if: steps.tag_creation.outputs.tag_created

      - name: Install Node dependencies
        if: steps.tag_creation.outputs.tag_created
        run: npm ci --prefer-offline --no-audit

      - name: Create the dist archive for this release
        if: steps.tag_creation.outputs.tag_created
        uses: ./.github/actions/create-release
        id: create-release
        with:
          sha: ${{ steps.git_cliff.outputs.sha }}
          tag: ${{ steps.git_cliff.outputs.version }}

      - name: Create release
        if: steps.tag_creation.outputs.tag_created
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.git_cliff.outputs.version }}
          body: ${{ steps.git_cliff.outputs.content }}
          files: ${{ steps.create-release.outputs.archive-path }}
          generate_release_notes: false
          make_latest: true
