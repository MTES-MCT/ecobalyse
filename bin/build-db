#!/usr/bin/env node

/**
 * This script generates JSON Db fixtures so tests can perform assertions
 * against actual JSON data without having to rely on Http requests, which
 * is impossible in an Elm test environment.
 */
const fs = require("fs");

function getJson(path) {
  return JSON.parse(fs.readFileSync(path).toString());
}

/**
 * Adapts a standard JSON string to what is expected to be the format
 * used in Elm's template strings (`"""{}"""`).
 */
function serializeForElmTemplateString(toStringify) {
  return JSON.stringify(toStringify).replaceAll("\\", "\\\\");
}

function buildImpactsJsonDb(basePath = "public/data") {
  return serializeForElmTemplateString(getJson(`${basePath}/impacts.json`));
}

function buildTextileJsonDb(basePath = "public/data/textile") {
  return serializeForElmTemplateString({
    materials: getJson(`${basePath}/materials.json`),
    processes: getJson(`${basePath}/processes.json`),
    products: getJson(`${basePath}/products.json`),
  });
}

function buildFoodProcessesJsonDb(basePath = "public/data/food") {
  return serializeForElmTemplateString(getJson(`${basePath}/processes.json`));
}

function buildFoodIngredientsJsonDb(basePath = "public/data/food") {
  return serializeForElmTemplateString(getJson(`${basePath}/ingredients.json`));
}

function buildCountriesJsonDb() {
  return serializeForElmTemplateString(getJson(`public/data/countries.json`));
}

function buildTransportsJsonDb() {
  return serializeForElmTemplateString(getJson(`public/data/transports.json`));
}

const targetDbFile = "src/Static/Db.elm";
const elmTemplate = fs.readFileSync(`${targetDbFile}-template`).toString();
const elmWithFixtures = elmTemplate
  .replace("%impactsJson%", buildImpactsJsonDb())
  .replace("%textileJson%", buildTextileJsonDb())
  .replace("%foodProcessesJson%", buildFoodProcessesJsonDb())
  .replace("%foodIngredientsJson%", buildFoodIngredientsJsonDb())
  .replace("%countriesJson%", buildCountriesJsonDb())
  .replace("%transportsJson%", buildTransportsJsonDb());

const header =
  "---- THIS FILE WAS GENERATED FROM THE FILE `Db.elm-template` BY THE `/bin/build-db` SCRIPT";

try {
  fs.writeFileSync(targetDbFile, `${header}\n\n${elmWithFixtures}`);
  const fileSizeInKB = Math.ceil(fs.statSync(targetDbFile).size / 1024);
  console.log(`Successfully generated Elm static database at ${targetDbFile} (${fileSizeInKB}Â KB)`);
} catch (err) {
  throw new Error(`Unable to generate Elm static database: ${err}`);
}
