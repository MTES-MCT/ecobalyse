module Static.Db exposing (Db, rdb)

import Data.Common.Db as Common
import Data.Country exposing (Country)
import Data.Food.Db as Food
import Data.Impact.Definition exposing (Definitions)
import Data.Textile.Db as Textile
import Data.Transport exposing (Distances)

rdefinitions : Result String Definitions
rdefinitions = Common.impactsFromJson """%impactsJson%"""

rtextile : Result String Textile.Db
rtextile =
    rdefinitions
        |> Result.andThen
            (\definitions ->
                Textile.buildFromJson definitions """%textileJson%""")

rfood : Result String Food.Db
rfood =
    rdefinitions
        |> Result.andThen
            (\definitions ->
                Food.buildFromJson definitions """%foodProcessesJson%""" """%foodIngredientsJson%"""
            )

rcountries : Result String (List Country)
rcountries = rtextile |> Result.andThen (\textile -> Common.countriesFromJson textile """%countriesJson%""")

rdistances : Result String Distances
rdistances = Common.transportsFromJson """%transportsJson%"""

type alias Db =
    { definitions: Definitions
    , textile: Textile.Db
    , food:Food.Db
    , countries: List Country
    , distances:Distances
    }

rdb : Result String Db
rdb = Result.map5 Db rdefinitions rtextile rfood rcountries rdistances
